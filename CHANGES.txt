Build 6 (2017-4-19)

 * Introduce resource versioning like website for easier app update
 * Support the distinction between in-stock items and non-stock items
 * Automatic version upgrade notification
 * Display shipments and generate shipment document for printing
 * Integrate cainiao electronic shipping document generation and cloud print
 * Upgrade to ExtJS 6.2.1
 * Implement wechat client mecop for shipment package scanning


Build 31 (2017-8-28)

 * Support internal memo field on order
 * Allow order status to be changed manually
 * Split ecop into own git repository with server and client code
 * Separate deployment of erp from website
 * Show payment information in order panel
 * Use keyboard shortcuts to save order changes
 * Manual customer creation
 * Records multiple payments and paid amount of the order
 * Separate ItemController from ItemManagerController
 * Merge item group management into a tab in ItemWindow


Build 65 (2017-12-25)

 * Add paymentDate to order payment
 * Show photos uploaded into order by customer
 * Send an order url to customer via SMS
 * Generate purchase orders for service order and proper profit accounting


Build (2018)

 * Manual supplier payment processing via Wepay

 * Upload photos to order as attachments


Future
------

 * Generate Wechat order payment Barcode for sending to customer
 * Make ItemSelector window a global singleton window using utility function
    Ecop.util.Util.selectItem(callback)
 * Share session and login between ecop and web
 * Mark orders changed by user actions such as payment or photo upload
 * Switch to ExtJS Modern toolkit with 6.5.2 in preparation for switch to
   ExtReact
 * Move common api between web and ecop into same api domain


 * Allow staff to add photos to an order on-site
 * Implement order memos for order tracking
 * Prevent images or contents with forbidden words from being published
 * Publish articles to wechat open platform
 * Assign an order to a particular user for tracking
 * Use the same session mechanism for website and ecop
 * Use the same jsonrpc protection mechanism for website and ecop
 * Push / share an order to a friend via wechat message
 * Add permission control mechanism to ecop backend (for order reopen e.g.)
 * Optimize the images sizes when uploading to oss
 * Seperate js-common into its own package to be shared between various
   javascript projects (for ecop)
 * Refund of order payment for alipay and wepay
 * Do not create and render all the management panels at once during startup
 * Consider integrate online markdown editor like
   https://markdown-it.github.io/ for article authoring
 * Cancellation of paid orders with payment refund

Low priority

 * Add invoice info to order
 * Do not require user to re-login every time browser is refreshed
